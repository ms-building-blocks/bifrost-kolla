---
{% set nmap = xci.network_mapping %}
# You can use this file to override _any_ variable throughout Kolla.
# Additional options can be found in the
# 'kolla-ansible/ansible/group_vars/all.yml' file. Default value of all the
# commented parameters are shown here, To override the default value uncomment
# the parameter and change its value.

###############
# Kolla options
###############
# Valid options are [ COPY_ONCE, COPY_ALWAYS ]
#config_strategy: "COPY_ALWAYS"

# Valid options are [ centos, oraclelinux, ubuntu ]
#kolla_base_distro: "centos"

# Valid options are [ binary, source ]
#kolla_install_type: "binary"
kolla_install_type: "source"

# Valid option is Docker repository tag
# openstack_release: ""

# Location of configuration overrides
#node_custom_config: "/etc/kolla/config"

# This should be a VIP, an unused IP on your network that will float between
# the hosts running keepalived for high-availability. If you want to run an
# All-In-One without haproxy and keepalived, you can set enable_haproxy to no
# in "OpenStack options" section, and set this value to the first IP on your
# 'network_interface' as set in the Networking section below.
kolla_internal_vip_address: {{ net_config[nmap['br-mgmt']].network | ip_add( ip_shift-1 ) }}

# This is the DNS name that maps to the kolla_internal_vip_address VIP. By
# default it is the same as kolla_internal_vip_address.
#kolla_internal_fqdn: "{ { kolla_internal_vip_address } }"

# This should be a VIP, an unused IP on your network that will float between
# the hosts running keepalived for high-availability. It defaults to the
# kolla_internal_vip_address, allowing internal and external communication to
# share the same address.  Specify a kolla_external_vip_address to separate
# internal and external requests between two VIPs.
#kolla_external_vip_address: "{ { kolla_internal_vip_address } }"
kolla_external_vip_address: {{ net_config[nmap['br-mgmt']].network | ip_add( ip_shift ) }}

# The Public address used to communicate with OpenStack as set in the public_url
# for the endpoints that will be created. This DNS name should map to
# kolla_external_vip_address.
#kolla_external_fqdn: "{ { kolla_external_vip_address } }"
{% if os_basic.own_certs %}
kolla_external_fqdn: {{ xci.pod_name}}.{{ dns_domain }}
{% endif %}

################
# Docker options
################
# Below is an example of a private repository with authentication. Note the
# Docker registry password can also be set in the passwords.yml file.

#docker_registry: "172.16.0.10:4000"
docker_registry: {{ xci.registry }}:5000
#docker_namespace: "companyname"
#docker_registry_username: "sam"
#docker_registry_password: "correcthorsebatterystaple"


##############################
# Neutron - Networking Options
##############################
# This interface is what all your api services will be bound to by default.
# Additionally, all vxlan/tunnel and storage network traffic will go over this
# interface by default. This interface must contain an IPv4 address.
# It is possible for hosts to have non-matching names of interfaces - these can
# be set in an inventory file per host or per group or stored separately, see
#     http://docs.ansible.com/ansible/intro_inventory.html
# Yet another way to workaround the naming problem is to create a bond for the
# interface on all hosts and give the bond name here. Similar strategy can be
# followed for other types of interfaces.
## this variable will be changed in inventory file
# network_interface: "eth0"

# These can be adjusted for even more customization. The default is the same as
# the 'network_interface'. These interfaces must contain an IPv4 address.
#kolla_external_vip_interface: "{ { network_interface } }"
#api_interface: "{ { network_interface } }"
#storage_interface: "{ { network_interface } }"
#cluster_interface: "{ { network_interface } }"
#tunnel_interface: "{ { network_interface } }"

#dns_interface: "{ { network_interface } }"

# This is the raw interface given to neutron as its external network port. Even
# though an IP address can exist on this interface, it will be unusable in most
# configurations. It is recommended this interface not be configured with any IP
# addresses for that reason.
# neutron_external_interface: "eth1"

# Valid options are [ openvswitch, linuxbridge, vmware_nsxv, vmware_dvs, opendaylight ]
#neutron_plugin_agent: "openvswitch"


####################
# keepalived options
####################
# Arbitrary unique number from 0..255
#keepalived_virtual_router_id: "51"


#############
# TLS options
#############
# To provide encryption and authentication on the kolla_external_vip_interface,
# TLS can be enabled.  When TLS is enabled, certificates must be provided to
# allow clients to perform authentication.
#kolla_enable_tls_external: "no"
#kolla_external_fqdn_cert: "{ { node_config_directory } }/certificates/haproxy.pem"
{% if os_basic.own_certs %}
kolla_enable_tls_external: "yes"
kolla_external_fqdn_cert: "{% raw %}{{ node_config_directory }}{% endraw %}/certificates/haproxy.pem"
{% endif %}

##############
# OpenDaylight
##############
#enable_opendaylight_qos: "no"
#enable_opendaylight_l3: "yes"

###################
# OpenStack options
###################
# Use these options to set the various log levels across all OpenStack projects
# Valid options are [ True, False ]
#openstack_logging_debug: "False"


# Valid options are [ novnc, spice, rdp ]
#nova_console: "novnc"

# OpenStack services can be enabled or disabled with these options
#enable_aodh: "no"
#enable_barbican: "no"
#enable_ceilometer: "no"
enable_ceilometer: "yes"
#enable_central_logging: "no"
enable_central_logging: "yes"
enable_elasticsearch: "yes"
{% if (xci.ceph_mapping is defined) %}
enable_ceph: "yes"
enable_ceph_rgw: "yes"
{% endif %}
#enable_ceph: "no"
#enable_ceph_rgw: "no"
#enable_chrony: "no"
#enable_cinder: "no"
enable_cinder: "yes"
#enable_cinder_backup: "yes"
#enable_cinder_backend_hnas_iscsi: "no"
#enable_cinder_backend_hnas_nfs: "no"
#enable_cinder_backend_iscsi: "no"
#enable_cinder_backend_lvm: "no"
#enable_cinder_backend_nfs: "no"
{% if (xci.ceph_mapping is not defined) %}
enable_cinder_backend_nfs: "yes"
{% endif %}
#enable_cloudkitty: "no"
#enable_collectd: "no"
#enable_congress: "no"
#enable_designate: "no"
{% if os_basic.dnsaas %}
enable_designate: "yes"
{% endif %}
#enable_destroy_images: "no"
#enable_etcd: "no"
#enable_freezer: "no"
#enable_gnocchi: "no"
enable_gnocchi: "yes"
#enable_grafana: "no"
enable_grafana: "yes"
#enable_haproxy: "yes"
#enable_heat: "yes"
#enable_horizon: "yes"
#enable_horizon_cloudkitty: "{% raw %}{{ enable_cloudkitty | bool }}{% endraw %}"
#enable_horizon_designate: "{% raw %}{{ enable_designate | bool }}{% endraw %}"
#enable_horizon_freezer: "{% raw %}{{ enable_freezer | bool }}{% endraw %}"
#enable_horizon_ironic: "{% raw %}{{ enable_ironic | bool }}{% endraw %}"
#enable_horizon_karbor: "{% raw %}{{ enable_karbor | bool }}{% endraw %}"
#enable_horizon_magnum: "{% raw %}{{ enable_magnum | bool }}{% endraw %}"
#enable_horizon_manila: "{% raw %}{{ enable_manila | bool }}{% endraw %}"
#enable_horizon_mistral: "{% raw %}{{ enable_mistral | bool }}{% endraw %}"
#enable_horizon_murano: "{% raw %}{{ enable_murano | bool }}{% endraw %}"
#enable_horizon_neutron_lbaas: "{% raw %}{{ enable_neutron_lbaas | bool }}{% endraw %}"
#enable_horizon_sahara: "{% raw %}{{ enable_sahara | bool }}{% endraw %}"
#enable_horizon_searchlight: "{% raw %}{{ enable_searchlight | bool }}{% endraw %}"
#enable_horizon_senlin: "{% raw %}{{ enable_senlin | bool }}{% endraw %}"
#enable_horizon_solum: "{% raw %}{{ enable_solum | bool }}{% endraw %}"
#enable_horizon_tacker: "{% raw %}{{ enable_tacker | bool }}{% endraw %}"
#enable_horizon_trove: "{% raw %}{{ enable_trove | bool }}{% endraw %}"
#enable_horizon_watcher: "{% raw %}{{ enable_watcher | bool }}{% endraw %}"
#enable_horizon_zun: "{% raw %}{{ enable_zun | bool }}{% endraw %}"
#enable_hyperv: "no"
#enable_influxdb: "no"
enable_influxdb: "yes"
#enable_ironic: "no"
#enable_karbor: "no"
#enable_kuryr: "no"
#enable_magnum: "no"
#enable_manila: "no"
#enable_manila_backend_generic: "no"
#enable_manila_backend_hnas: "no"
#enable_mistral: "no"
#enable_mongodb: "no"
#enable_murano: "no"
#enable_multipathd: "no"
#enable_neutron_bgp_dragent: "no"
#enable_neutron_dvr: "no"
#enable_neutron_lbaas: "no"
#enable_neutron_fwaas: "no"
#enable_neutron_qos: "no"
#enable_neutron_agent_ha: "no"
#enable_neutron_vpnaas: "no"
#enable_neutron_sfc: "no"
enable_neutron_provider_networks: "yes"
#enable_nova_serialconsole_proxy: "no"
#enable_octavia: "no"
#enable_opendaylight: "no"
#enable_openvswitch: "{% raw %}{{ neutron_plugin_agent != 'linuxbridge' }}{% endraw %}"
#enable_ovs_dpdk: "no"
#enable_osprofiler: "no"
enable_osprofiler: "yes"
#enable_panko: "no"
#enable_qdrouterd: "no"
#enable_rally: "no"
#enable_redis: "no"
#enable_sahara: "no"
#enable_searchlight: "no"
#enable_senlin: "no"
#enable_skydive: "no"
enable_skydive: "yes"
#enable_solum: "no"
#enable_swift: "no"
#enable_telegraf: "no"
enable_telegraf: "yes"
#enable_tacker: "no"
#enable_tempest: "no"
#enable_trove: "no"
#enable_vmtp: "no"
#enable_watcher: "no"
#enable_zun: "no"

##############
# Ceph options
##############
# Ceph can be setup with a caching to improve performance. To use the cache you
# must provide separate disks than those for the OSDs
#ceph_enable_cache: "no"

# Set to no if using external Ceph without cephx.
#external_ceph_cephx_enabled: "yes"

# Ceph is not able to determine the size of a cache pool automatically,
# so the configuration on the absolute size is required here, otherwise the flush/evict will not work.
#ceph_target_max_bytes: ""
#ceph_target_max_objects: ""

# Valid options are [ forward, none, writeback ]
#ceph_cache_mode: "writeback"

# A requirement for using the erasure-coded pools is you must setup a cache tier
# Valid options are [ erasure, replicated ]
#ceph_pool_type: "replicated"

# Integrate ceph rados object gateway with openstack keystone
#enable_ceph_rgw_keystone: "no"


#############################
# Keystone - Identity Options
#############################

# Valid options are [ uuid, fernet ]
#keystone_token_provider: 'uuid'

# Interval to rotate fernet keys by (in seconds). Must be an interval of
# 60(1 min), 120(2 min), 180(3 min), 240(4 min), 300(5 min), 360(6 min),
# 600(10 min), 720(12 min), 900(15 min), 1200(20 min), 1800(30 min),
# 3600(1 hour), 7200(2 hour), 10800(3 hour), 14400(4 hour), 21600(6 hour),
# 28800(8 hour), 43200(12 hour), 86400(1 day), 604800(1 week).
#fernet_token_expiry: 86400


########################
# Glance - Image Options
########################
# Configure image backend.
{% if (xci.ceph_mapping is defined) %}
glance_backend_file: "no"
glance_backend_ceph: "yes"
{% endif %}
#glance_backend_file: "yes"
#glance_backend_ceph: "no"
#glance_backend_vmware: "no"
#glance_backend_swift: "no"


##################
# Barbican options
##################
# Valid options are [ simple_crypto, p11_crypto ]
#barbican_crypto_plugin: "simple_crypto"
#barbican_library_path: "/usr/lib/libCryptoki2_64.so"

################
## Panko options
################
# Valid options are [ mongodb, mysql ]
#panko_database_type: "mysql"

#################
# Gnocchi options
#################
# Valid options are [ file, ceph ]
#gnocchi_backend_storage: "{ { 'ceph' if enable_ceph|bool else 'file' } }"


################################
# Cinder - Block Storage Options
################################
# Enable / disable Cinder backends
#cinder_backend_ceph: "{ { enable_ceph } }"
#cinder_backend_vmwarevc_vmdk: "no"
#cinder_volume_group: "cinder-volumes"

# Valid options are [ nfs, swift, ceph ]
#cinder_backup_driver: "ceph"
{% if (xci.ceph_mapping is not defined) %}
cinder_backup_driver: "nfs"
{% endif %}
#cinder_backup_share: ""
#cinder_backup_mount_options_nfs: ""
{% if (xci.ceph_mapping is not defined) %}
cinder_backup_mount_options_nfs: "rsize=65535,wsize=65535,timeo=1200,actimeo=120"
{% endif %}

###################
# Designate options
###################
# Valid options are [ bind9 ]
{% if os_basic.dnsaas %}
designate_backend: "bind9"
designate_ns_record: "{{ xci.pod_name.split('.')[-1] }}.{{ dns_domain }}"
{% endif %}

########################
# Nova - Compute Options
########################
#nova_backend_ceph: "{ { enable_ceph } }"

# Valid options are [ qemu, kvm, vmware ]
#nova_compute_virt_type: "kvm"

#################
# Hyper-V options
#################
# Hyper-V can be used as hypervisor
#hyperv_username: "user"
#hyperv_password: "password"
#vswitch_name: "vswitch"
# URL from which Nova Hyper-V MSI is downloaded
#nova_msi_url: "https://www.cloudbase.it/downloads/HyperVNovaCompute_Beta.msi"

#############################
# Horizon - Dashboard Options
#############################
#horizon_backend_database: "{ { enable_murano | bool } }"


######################################
# Manila - Shared File Systems Options
######################################
# HNAS backend configuration
#hnas_ip:
#hnas_user:
#hnas_password:
#hnas_evs_id:
#hnas_evs_ip:
#hnas_file_system_name:

################################
# Swift - Object Storage Options
################################
# Swift expects block devices to be available for storage. Two types of storage
# are supported: 1 - storage device with a special partition name and filesystem
# label, 2 - unpartitioned disk  with a filesystem. The label of this filesystem
# is used to detect the disk which Swift will be using.

# Swift support two matching modes, valid options are [ prefix, strict ]
#swift_devices_match_mode: "strict"

# This parameter defines matching pattern: if "strict" mode was selected,
# for swift_devices_match_mode then swift_device_name should specify the name of
# the special swift partition for example: "KOLLA_SWIFT_DATA", if "prefix" mode was
# selected then swift_devices_name should specify a pattern which would match to
# filesystems' labels prepared for swift.
#swift_devices_name: "KOLLA_SWIFT_DATA"


################################################
# Tempest - The OpenStack Integration Test Suite
################################################
# following value must be set when enable tempest
tempest_image_id:
tempest_flavor_ref_id:
tempest_public_network_id:
tempest_floating_network_name:

# tempest_image_alt_id: "{ { tempest_image_id } }"
# tempest_flavor_ref_alt_id: "{ { tempest_flavor_ref_id } }"

###################################
# VMware - OpenStack VMware support
###################################
#vmware_vcenter_host_ip:
#vmware_vcenter_host_username:
#vmware_vcenter_host_password:
#vmware_datastore_name:
#vmware_vcenter_name:
#vmware_vcenter_cluster_name:
