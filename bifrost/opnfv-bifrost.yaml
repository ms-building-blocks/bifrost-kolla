---
- hosts: localhost
  connection: local
  vars_files:
    - "vars/pods.yaml"
    - "vars/servers.yaml"
    - "vars/defaults.yaml"
  tasks:
    ##
    # Clean and get Bifrost sources
    ##
    - name: Clean old bifrost
      file:
        path: "{{ bifrost_path }}"
        state: absent
    - name: clone bifrost
      git:
        repo: "{{ bifrost_url }}"
        dest: "{{ bifrost_path }}"
        version: "{{ bifrost_branch }}"
    - name: Clean fucking keystone file 1 that fails - Temp
      file:
          path: "{{ bifrost_path }}/playbooks/roles/bifrost-ironic-install/tasks/keystone_setup.yml"
          state: absent
    - name: Clean fucking keystone file 2 that fails - Temp
      file:
          path: "{{ bifrost_path }}/playbooks/roles/bifrost-ironic-install/tasks/keystone_setup_inspector.yml"
          state: absent
    ##
    # Clean dnsmasq.leases
    ##
    - name: Remove pre-existing leases file
      file: path=/var/lib/misc/dnsmasq.leases state=absent
      become: true
    ##
    # Prepare inventory and config files
    ##
    - name: copy bifrost target vars
      template:
        dest: "{{ bifrost_path }}/playbooks/inventory/group_vars/target"
        src: "templates/target.j2"
    - name: copy bifrost baremetal vars
      template:
        dest: "{{ bifrost_path }}/playbooks/inventory/group_vars/baremetal"
        src: "templates/baremetal.j2"
    - name: set inventory
      template:
        src: "templates/inventory.json.j2"
        dest: "{{ ansible_env.HOME }}/pod_inventory.json"
    - name: clean detailled inventory folder
        file:
          path: "{{ ansible_env.HOME }}/pod_inventory/"
          state: absent
    - name: set detailled inventory folder
        file:
          path: "{{ ansible_env.HOME }}/pod_inventory/"
          state: directory
    - name: set {{ item }} inventory
      template:
        src: "templates/inventory.json.j2"
        dest: "{{ ansible_env.HOME }}/pod_inventory/{{ item }}.json"
      with_items: "{{ pod.nodes }}"
    ##
    # Install Bifrost
    ##
    - name: Install bifrost requirements
      pip:
        requirements: "{{ bifrost_path }}/requirements.txt"
      become: true
    - name: Install bifrost
      shell: ansible-playbook -vvvv -i inventory/target install.yaml -e staging_drivers_include=true
      args:
        chdir: "{{ bifrost_path }}/playbooks/"
    - name: correct bifrost config - drivers list
      lineinfile:
        path: /etc/ironic/ironic.conf
        regexp: '^enabled_drivers ='
        line: "enabled_drivers = {{ ironic_drivers_list }}"
    - service:
        name: ironic-conductor
        state: restarted
      become: true
    ##
    # Correct DNSmasq config for default gateway
    ##
    - name: correct dnsmasq config - default gateway
      lineinfile:
        path: /etc/dnsmasq.conf
        regexp: '^dhcp-option=3'
        line: "dhcp-option=3,{{ pods[pod_name].networks.admin.gateway }}"
      become: true
    - service:
        name: dnsmasq
        state: restarted
      become: true
    ##
    # Set various files
    ##
    - name: set bifrost_env-vars
      copy:
        src: "files/bifrost_env-vars"
        dest: "{{ ansible_env.HOME }}/bifrost_env-vars"
    - name: set .bash_aliases for bifrost
      copy:
        src: "files/bash_aliases"
        dest: "{{ ansible_env.HOME }}/.bash_aliases"
    - name: prepare ssh config file
      template:
        src: "templates/ssh_config.j2"
        dest: "{{ ansible_env.HOME }}/.ssh/config"
      become: true
    ##
    # Enroll
    ##
    - name: Enroll nodes
      shell: ansible-playbook -vvvv -i inventory/bifrost_inventory.py enroll-dynamic.yaml
      args:
        chdir: "{{ bifrost_path }}/playbooks/"
      environment:
        BIFROST_INVENTORY_SOURCE: "{{ ansible_env.HOME }}/pod_inventory.json"
    ##
    # Deploy
    ##
    - name: Install bifrost
      shell: ansible-playbook -vvvv -i inventory/target install.yaml -e staging_drivers_include=true
      args:
        chdir: "{{ bifrost_path }}/playbooks/"
      environment:
        BIFROST_INVENTORY_SOURCE: "{{ ansible_env.HOME }}/pod_inventory.json"
