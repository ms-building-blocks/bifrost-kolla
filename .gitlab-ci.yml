---
stages:
  - test
  - deploy
  - check

variables:
  os_version: stable/pike
  target_folder: /opt/bosa
  scenario: os-nosdn-nofeature-ha

syntax_checking:
  stage: test
  image: dockerproxy-iva.si.francetelecom.fr/debian:latest
  tags:
    - shared
    - docker
    - innovation
  script:
    - apt-get update -qq
    - apt-get install -y -qq yamllint python3-pkg-resources
    - yamllint *.y?ml
    - yamllint vars/
    - yamllint roles/*/tasks/*.y?ml

# Deploy
.deploy_pod: &deploy_pod
  stage: deploy
  tags:
    - sina
    - shell
  script:
    - cd vars
    - git archive --remote=git@gitlab.forge.orange-labs.fr:opnfv/TerraHouat.git HEAD:config ${pod}.yaml | tar -x
    - git archive --remote=git@gitlab.forge.orange-labs.fr:opnfv/TerraHouat.git HEAD:config idf-${pod}.yaml | tar -x
    - git archive --remote=git@gitlab.forge.orange-labs.fr:opnfv/TerraHouat.git HEAD:certificats certificats-${pod}.yaml | tar -x
    - perl -i -pe "s!stable/ocata!$os_version!" defaults.yaml
    - ln -s ${pod}.yaml pdf.yaml
    - ln -s idf-${pod}.yaml idf.yaml
    - ln -s certificats-${pod}.yaml certificates.yaml
    - cd ..
    - rsync --cvs-exclude -e ssh -avz  --delete-after . ${pod}.opnfv.fr:${target_folder}
    - ssh ${pod}.opnfv.fr "cd /opt/bosa; echo ${ANSIBLE_VAULT_PASSWORD} > .vault_pass.txt"
    - ssh ${pod}.opnfv.fr "cd /opt/bosa; sudo ./run.sh orange ${pod}"
    - date=$(date +%Y-%m-%d)
    - os_version=$(echo ${os_version} | perl -pe 's!/!_!')
    - rm -f ansible-role-requirements* || true
    - scp ${pod}.opnfv.fr:/opt/openstack-ansible/ansible-role-requirements.yml ansible-role-requirements_${os_version}_${date}.yml
    - "curl -X POST \
      -F token=${functest_token} \
      -F ref=${functest_ref_name} \
      -F 'variables[pod]=${pod}' \
      -F 'variables[scenario]=${scenario}' \
      https://gitlab.forge.orange-labs.fr/api/v4/projects/1674/trigger/pipeline"
  after_script:
    - ssh ${pod}.opnfv.fr "cd /opt/bosa; sudo rm .vault_pass.txt || true"
  artifacts:
    paths:
      - ansible-role-requirements_*.yml

deploy_pod1:
  variables:
    pod: pod1
  environment:
    name: pod1
    url: https://10.1.0.9/
  <<: *deploy_pod

deploy_pod2:
  variables:
    pod: pod2
    scenario: os-nosdn-nofeature-noha
  environment:
    name: pod2
    url: https://10.2.0.9/
  when: manual
  <<: *deploy_pod

deploy_pod4:
  variables:
    pod: pod4
    scenario: os-nosdn-nofeature-ha
  environment:
    name: pod4
    url: https://10.4.0.9/
  when: manual
  <<: *deploy_pod

